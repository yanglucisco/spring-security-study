server:
  port: 8080

spring:
  security:
    oauth2:
      client:
        registration:
          articles-client-oidc:
            provider: spring
            client-id: articles-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://auth-client:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: articles-client-oidc
          articles-client-authorization-code:
            provider: spring
            client-id: articles-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://auth-client:8080/authorized"
            scope: articles.read
            client-name: articles-client-authorization-code
          articles-client-authorization-server:
            provider: spring
            client-id: account-service
            client-secret: account-service-secret
            authorization-grant-type: client_credentials
#            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: server
            client-name: articles-client-authorization-server
          articles-brow:
            provider: spring
            client-id: brow-client
            client-secret: brow-client
            authorization-grant-type: password
            #            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: brow
            client-name: articles-brow
        provider:
          spring:
            issuer-uri: http://auth-server:9000